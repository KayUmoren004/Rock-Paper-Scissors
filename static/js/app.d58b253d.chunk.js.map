{"version":3,"sources":["App.js"],"names":["App","state","scoreValue","userChoice","botChoice","Winner","botScore","userScore","modalVisible","botDecisionFunction","botNum","Math","floor","random","setState","this","Alert","alert","text","onPress","style","cancelable","styles","container","color","fontWeight","fontSize","gameContainer","human","gameView","winBackground","choicesContainer","padding","borderWidth","borderRadius","borderColor","marginHorizontal","bot","position","bottom","marginVertical","React","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","height","Platform","select","ios","flexDirection","web","default","margin","alignContent","paddingVertical","modalView","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","openButton","textStyle","textAlign","modalText","marginBottom","centeredView","marginTop"],"mappings":"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","file":"static/js/app.d58b253d.chunk.js","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  SafeAreaView,\n  Platform,\n  TouchableOpacity,\n  Modal,\n  TouchableHighlight,\n  Alert\n} from \"react-native\";\n\nexport default class App extends React.Component {\n  state = {\n    scoreValue: 1,\n    userChoice: \"\",\n    botChoice: \"\",\n    Winner: \"\",\n    botScore: 0,\n    userScore: 0,\n    modalVisible: false\n  };\n\n\n\n  botDecisionFunction = () => {\n    var botNum = Math.floor(Math.random() * 30) + 1;\n\n    //Display Bot's Choice\n\n    if (botNum >= 0 && botNum <= 10) {\n      this.setState({\n        botChoice: \"Rock\",\n      });\n    } else if (botNum >= 11 && botNum <= 20) {\n      this.setState({\n        botChoice: \"Paper\",\n      });\n    } else if (botNum >= 21 && botNum <= 30) {\n      this.setState({\n        botChoice: \"Scissors\",\n      });\n    }\n\n    //Bot Logic\n\n    //Logic for when user selects rock\n    if (this.state.userChoice === \"Rock\" && (botNum >= 0 && botNum <= 10)) {\n      this.setState({\n        Winner: \"Tie\",\n        //botScore: this.state.botScore + 1,\n        //userScore: this.state.userScore + 1,\n      });\n    } else if (\n      this.state.userChoice === \"Rock\" &&\n      (botNum >= 11 &&\n      botNum <= 20)\n    ) {\n      this.setState({\n        Winner: \"Bot\",\n        botScore: this.state.botScore + 1,\n        //userScore: this.state.userScore + 1,\n      });\n    } else if (\n      this.state.userChoice === \"Rock\" &&\n    (botNum >= 21 &&\n      botNum <= 30)\n    ) {\n      this.setState({\n        Winner: \"Human\",\n        //botScore: this.state.botScore + 1,\n        userScore: this.state.userScore + 1,\n      });\n    }\n\n    //Logic for when user selects paper\n    if (this.state.userChoice === \"Paper\" && (botNum >= 0 && botNum <= 10)) {\n      this.setState({\n        Winner: \"Human\",\n        //botScore: this.state.botScore + 1,\n        userScore: this.state.userScore + 1,\n      });\n    } else if (\n      this.state.userChoice === \"Paper\" &&\n      (botNum >= 11 &&\n      botNum <= 20)\n    ) {\n      this.setState({\n        Winner: \"Tie\",\n        //botScore: this.state.botScore + 1,\n       // userScore: this.state.userScore + 1,\n      });\n    } else if (\n      this.state.userChoice === \"Paper\" &&\n      (botNum >= 21 &&\n      botNum <= 30)\n    ) {\n      this.setState({\n        Winner: \"Bot\",\n        botScore: this.state.botScore + 1,\n        //userScore: this.state.userScore + 1,\n      });\n    }\n\n    //Logic for when user selects scissors\n    if (this.state.userChoice === \"Scissors\" && (botNum >= 0 && botNum <= 10)) {\n      this.setState({\n        Winner: \"Bot\",\n        botScore: this.state.botScore + 1,\n        //userScore: this.state.userScore + 1,\n      });\n    } else if (\n      this.state.userChoice === \"Scissors\" &&\n     ( botNum >= 11 &&\n      botNum <= 20)\n    ) {\n      this.setState({\n        Winner: \"Human\",\n        //botScore: this.state.botScore + 1,\n        userScore: this.state.userScore + 1,\n      });\n    } else if (\n      this.state.userChoice === \"Scissors\" &&\n      (botNum >= 21 &&\n      botNum <= 30)\n    ) {\n      this.setState({\n        Winner: \"Tie\",\n       // botScore: this.state.botScore + 1,\n        //userScore: this.state.userScore + 1,\n      });\n    }\n  };\n\n\n\n  render() {\n    if (this.state.userScore === 5) {\n      Alert.alert(\n        \"You Won!!!\",\n        \"You beat the Bot\",\n        [\n          {\n            text: \"Reset\",\n            onPress: () => this.setState({\n              userScore: this.state.userScore = 0,\n              botScore: this.state.botScore = 0,\n            }, function() {}\n            ),\n            style: \"destructive\"\n          }\n        ],\n        { cancelable: false }\n      )\n    } else if (this.state.botScore === 5) {\n      Alert.alert(\n        \"You Won!!!\",\n        \"You beat the Bot\",\n        [\n          {\n            text: \"Reset\",\n            onPress: () => this.setState({\n              userScore: this.state.userScore = 0,\n              botScore: this.state.botScore = 0,\n            }, function() {}\n            ),\n            style: \"destructive\"\n          }\n        ],\n        { cancelable: false }\n      )\n    }\n    return (\n      <SafeAreaView style={styles.container}>\n        <StatusBar style=\"light\" />\n        <Text style={{ color: \"#fff\", fontWeight: \"900\", fontSize: 30 }}>\n          Winner: {this.state.Winner}\n        </Text>\n        <View style={styles.gameContainer}>\n          <View style={styles.human}>\n            <Text style={{ color: \"#fff\", fontWeight: \"900\", fontSize: 30 }}>Human</Text>\n            <Text style={{ color: \"#fff\", fontWeight: \"900\", fontSize: 25 }}>\n              Score: {this.state.userScore}\n            </Text>\n\n            <View style={styles.gameView}>\n              <View style={styles.winBackground}>\n                <Text style={{ color: \"#000\", fontWeight: \"900\", fontSize: 20 }}>\n                  Choice: {this.state.userChoice}\n                </Text>\n              </View>\n\n              <View style={styles.choicesContainer}>\n                <TouchableOpacity\n                  onPress={() =>\n                    this.setState({\n                      userChoice: \"Rock\",\n                    })\n                  }\n                >\n                  <Text\n                    style={{\n                      color: \"#fff\",\n                      padding: 10,\n                      borderWidth: 1,\n                      borderRadius: 20,\n                      borderColor: \"#fff\",\n                      marginHorizontal: 20,\n                      fontWeight: \"900\", \n                      fontSize: 15\n                    }}\n                  >\n                    Rock\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  onPress={() =>\n                    this.setState({\n                      userChoice: \"Paper\",\n                    })\n                  }\n                >\n                  <Text\n                    style={{\n                      color: \"#fff\",\n                      padding: 10,\n                      borderWidth: 1,\n                      borderRadius: 20,\n                      marginHorizontal: 20,\n                      borderColor: \"#fff\",\n                      fontWeight: \"900\", \n                      fontSize: 15\n                    }}\n                  >\n                    Paper\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  onPress={() =>\n                    this.setState({\n                      userChoice: \"Scissors\",\n                    })\n                  }\n                >\n                  <Text\n                    style={{\n                      color: \"#fff\",\n                      padding: 10,\n                      borderWidth: 1,\n                      borderRadius: 20,\n                      marginHorizontal: 20,\n                      borderColor: \"#fff\",\n                      fontWeight: \"900\", \n                      fontSize: 15\n                    }}\n                  >\n                    Scissors\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          </View>\n\n          <View style={styles.bot}>\n            <Text style={{ color: \"#fff\", fontWeight: \"900\", fontSize: 30 }}>Bot</Text>\n            <Text style={{ color: \"#fff\", fontWeight: \"900\", fontSize: 25 }}>\n              Score: {this.state.botScore}\n            </Text>\n\n            <View style={styles.gameView}>\n              <View style={styles.winBackground}>\n                <Text style={{ color: \"#000\", fontWeight: \"900\", fontSize: 20 }}>\n                  Choice: {this.state.botChoice}\n                </Text>\n              </View>\n\n              <View style={styles.choicesContainer}>\n                <Text\n                  style={{\n                    color: \"#fff\",\n                    padding: 10,\n                    borderWidth: 1,\n                    borderRadius: 20,\n                    marginHorizontal: 20,\n                    borderColor: \"#fff\",\n                    fontWeight: \"900\", \n                    fontSize: 15\n                  }}\n                >\n                  Rate\n                </Text>\n                <TouchableOpacity onPress={this.botDecisionFunction}>\n                  <Text\n                    style={{\n                      color: \"#fff\",\n                      padding: 10,\n                      borderWidth: 1,\n                      borderRadius: 20,\n                      marginHorizontal: 20,\n                      borderColor: \"#fff\",\n                      fontWeight: \"900\", \n                      fontSize: 15\n                    }}\n                  >\n                    Play\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  onPress={() =>\n                    this.setState({\n                      botChoice: \"\",\n                      userChoice: \"\",\n                      Winner: \"\",\n                    })\n                  }\n                >\n                  <Text\n                    style={{\n                      color: \"#fff\",\n                      padding: 10,\n                      borderWidth: 1,\n                      borderRadius: 20,\n                      marginHorizontal: 20,\n                      borderColor: \"#fff\",\n                      fontWeight: \"900\", \n                      fontSize: 15\n                    }}\n                  >\n                    Reset\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          </View>\n        </View>\n\n        <Text style={{ color: \"#fff\", position: \"absolute\", bottom: 0, marginVertical:30, fontWeight:\"900\" }}>\n          Made by Godson Umoren\n        </Text>\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#000\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // flexDirection: \"row\"\n    width: \"100%\",\n    height: \"100%\",\n  },\n\n  gameContainer: {\n    //flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n\n    ...Platform.select({\n      ios: {\n        flexDirection: \"column\",\n      },\n      web: {\n        flexDirection: \"row\",\n      },\n      default: {\n        flexDirection: \"column\",\n      },\n    }),\n  },\n  human: {\n    margin: 10,\n    borderWidth: 10,\n    borderColor: \"#fff\",\n    padding: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    //justifyContent:\"flex-start\"\n  },\n  bot: {\n    margin: 10,\n    borderColor: \"#fff\",\n    borderWidth: 10,\n    padding: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    //justifyContent:\"flex-end\"\n  },\n  gameView: {\n    padding: 20,\n  },\n  winBackground: {\n    padding: 20,\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n  },\n  choicesContainer: {\n    paddingVertical: 20,\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    //alignItems:\"center\",\n    margin: 10,\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor:\"#fff\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#fff\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  openButton: {\n    backgroundColor: \"#F194FF\",\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  textStyle: {\n    color:\"#fff\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\",\n    color:\"#fff\"\n  },\n  centeredView: {\n    //flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22,\n    //backgroundColor:\"#fff\"\n  },\n\n});\n"],"sourceRoot":""}